/*
 * API Endpoints
 * Deliver monetary rewards and incentives to employees, customers, survey participants, and more through the Tremendous API. For organizational tasks, like managing your organization and it's members within Tremendous, please see the Tremendous Organizational API.
 *
 * The version of the OpenAPI document: 2
 * Contact: developers@tremendous.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.net.URI;
import com.konfigthis.client.model.WebhooksCreateWebhookRequest;
import com.konfigthis.client.model.WebhooksCreateWebhookResponse;
import com.konfigthis.client.model.WebhooksGetDetails200Response;
import com.konfigthis.client.model.WebhooksGetDetailsResponse;
import com.konfigthis.client.model.WebhooksListEventsResponse;
import com.konfigthis.client.model.WebhooksTriggerEventRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Disabled
public class WebhooksApiTest {

    private static WebhooksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WebhooksApi(apiClient);
    }

    /**
     * Create webhook
     *
     * Tremendous uses webhooks as a notification system for various events that happen in your account.  &gt; ðŸ“˜ Learn more about Webhooks &gt; &gt; Our guide explains everything you need to know about the Tremendous webhooks: &gt; [Read it here](https://developers.tremendous.com/)  Every organization can define a single webhook endpoint where we send requests to, whenever an event happens.  This endpoint allows you to setup that endpoint. The URL of the endpoint can be changed by making a request to this endpoint again with the new URL.  ## Request body  &lt;div class&#x3D;\&quot;object-schema-request-schema\&quot;&gt;   &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;Property&lt;/th&gt;       &lt;th&gt;Type&lt;/th&gt;       &lt;th&gt;Description&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody class&#x3D;\&quot;object-schema-table-body\&quot;&gt;     &lt;tr class&#x3D;\&quot;\&quot;&gt;&lt;td&gt;&lt;div class&#x3D;\&quot;property-name\&quot;&gt;   &lt;code class&#x3D;\&quot;property-name\&quot;&gt;url&lt;/code&gt; &lt;/div&gt; &lt;/td&gt;&lt;td&gt;&lt;span class&#x3D;\&quot;property-type\&quot;&gt;string&lt;/span&gt; &lt;span class&#x3D;\&quot;property-format\&quot;&gt;uri&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;URL the webhook will make requests to&lt;/p&gt; &lt;/td&gt;&lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;  &lt;/div&gt;  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebhookTest() throws ApiException {
        URI url = null;
        WebhooksCreateWebhookResponse response = api.createWebhook(url)
                .execute();
        // TODO: test validations
    }

    /**
     * List webhooks
     *
     * Every organization can only have one webhook. This endpoint shows the details about that webhook.  &gt; ðŸ“˜ Learn more about Webhooks &gt; &gt; Our guide explains everything you need to know about the Tremendous webhooks: &gt; [Read it here](https://developers.tremendous.com/) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        WebhooksGetDetailsResponse response = api.getDetails()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve webhook
     *
     * &gt; ðŸ“˜ Learn more about Webhooks &gt; &gt; Our guide explains everything you need to know about the Tremendous webhooks: &gt; [Read it here](https://developers.tremendous.com/) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetails_0Test() throws ApiException {
        String id = null;
        WebhooksGetDetails200Response response = api.getDetails_0(id)
                .execute();
        // TODO: test validations
    }

    /**
     * List events
     *
     * Lists all event types that can be sent to the configured webhook endpoint.  &gt; ðŸ“˜ Learn more about Webhooks &gt; &gt; Our guide explains everything you need to know about the Tremendous webhooks: &gt; [Read it here](https://developers.tremendous.com/) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEventsTest() throws ApiException {
        String id = null;
        WebhooksListEventsResponse response = api.listEvents(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Test webhook
     *
     * Making a request to this endpoint will cause our system to trigger a webhook for the specified event. This can be very useful when testing the setup that processes webhooks on your end.  &gt; ðŸ“˜ Learn more about Webhooks &gt; &gt; Our guide explains everything you need to know about the Tremendous webhooks: &gt; [Read it here](https://developers.tremendous.com/) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggerEventTest() throws ApiException {
        String event = null;
        String id = null;
        String response = api.triggerEvent(event, id)
                .execute();
        // TODO: test validations
    }

}
