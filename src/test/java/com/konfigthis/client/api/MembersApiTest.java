/*
 * API Endpoints
 * Deliver monetary rewards and incentives to employees, customers, survey participants, and more through the Tremendous API. For organizational tasks, like managing your organization and it's members within Tremendous, please see the Tremendous Organizational API.
 *
 * The version of the OpenAPI document: 2
 * Contact: developers@tremendous.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.MembersCreateNewMemberRequest;
import com.konfigthis.client.model.MembersCreateNewMemberResponse;
import com.konfigthis.client.model.MembersGetMemberResponse;
import com.konfigthis.client.model.MembersListMembersResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MembersApi
 */
@Disabled
public class MembersApiTest {

    private static MembersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new MembersApi(apiClient);
    }

    /**
     * Create member
     *
     * Each organization has one or more users that can access and manage that organization. These users are called members.  Members can take actions via the Tremendous web dashboard directly. These actions include adding funding sources to the organization, creating Campaigns, and more.  ### Permissions  Members can have one of two roles that determine their permissions within the organization:  1. &#x60;MEMBER&#x60;: Limited permissions. Can view their own reward and order histories only. 2. &#x60;ADMIN&#x60;: Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.  To create members of a sub-organizations [create an API key for that organization](https://developers.tremendous.com/) first, then use the new API key in the create member request.  ### Inviting new members  After creating a member, an automatic invite is sent to the email address. If the user is not registered yet, that person will then need to sign up for a Tremendous account.  &gt; ❗️ Automatic invitations are not available in the sandbox &gt; &gt; You must manually use the returned &#x60;invite_url&#x60; field in the payload instead. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewMemberTest() throws ApiException {
        String email = null;
        String name = null;
        String role = null;
        MembersCreateNewMemberResponse response = api.createNewMember(email, name, role)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMemberTest() throws ApiException {
        String id = null;
        MembersGetMemberResponse response = api.getMember(id)
                .execute();
        // TODO: test validations
    }

    /**
     * List members
     *
     * To list members of a sub-organization [create an API key for that organization](https://developers.tremendous.com/) first, then use the new API key in the list members request. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMembersTest() throws ApiException {
        MembersListMembersResponse response = api.listMembers()
                .execute();
        // TODO: test validations
    }

}
