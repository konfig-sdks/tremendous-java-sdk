/*
 * API Endpoints
 * Deliver monetary rewards and incentives to employees, customers, survey participants, and more through the Tremendous API. For organizational tasks, like managing your organization and it's members within Tremendous, please see the Tremendous Organizational API.
 *
 * The version of the OpenAPI document: 2
 * Contact: developers@tremendous.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.OrganizationsCreateApiKeyResponse;
import com.konfigthis.client.model.OrganizationsCreateNewOrganizationRequest;
import com.konfigthis.client.model.OrganizationsCreateNewOrganizationRequestCopySettings;
import com.konfigthis.client.model.OrganizationsCreateNewOrganizationResponse;
import com.konfigthis.client.model.OrganizationsGetListResponse;
import com.konfigthis.client.model.OrganizationsGetOrganizationResponse;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationsApi
 */
@Disabled
public class OrganizationsApiTest {

    private static OrganizationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OrganizationsApi(apiClient);
    }

    /**
     * Create API key
     *
     * Creates a new API key. The API key used to make the request will remain active.  Created API keys are generated randomly and returned in the response. **You cannot retrieve them again.** 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createApiKeyTest() throws ApiException {
        OrganizationsCreateApiKeyResponse response = api.createApiKey()
                .execute();
        // TODO: test validations
    }

    /**
     * Create organization
     *
     * Organizations are a way to separate different parts of your business within the same Tremendous account.  You can assign users in your Tremendous team as members to any organization. Users can be members of multiple organizations at once.  API keys belong to a single organization. The API key used in a request determines on behalf of which organization the request is carried out.  **Important note:** When creating an organization, you are required to either pass &#x60;with_api_key&#x60; or &#x60;copy_settings[user]&#x60; in the request body as &#x60;true&#x60;. This ensures that your new Organization can either be accessed via the API or the Dashboard. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewOrganizationTest() throws ApiException {
        String name = null;
        URI website = null;
        Boolean withApiKey = null;
        OrganizationsCreateNewOrganizationRequestCopySettings copySettings = null;
        String phone = null;
        OrganizationsCreateNewOrganizationResponse response = api.createNewOrganization(name, website)
                .withApiKey(withApiKey)
                .copySettings(copySettings)
                .phone(phone)
                .execute();
        // TODO: test validations
    }

    /**
     * List organizations
     *
     * The returned list only includes the organization to which the API key belongs to, that is used for the request. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        OrganizationsGetListResponse response = api.getList()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationTest() throws ApiException {
        String id = null;
        OrganizationsGetOrganizationResponse response = api.getOrganization(id)
                .execute();
        // TODO: test validations
    }

}
